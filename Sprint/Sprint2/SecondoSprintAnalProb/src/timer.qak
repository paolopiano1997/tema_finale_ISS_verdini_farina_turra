System subtearoom

Dispatch starttimer : starttimer(T)
Dispatch endtime : endtime(T)

Request stoptimer : stoptimer(T)
Reply okStop : okStop(T)


Context ctxtearoom_dummy   ip [host="localhost" port=8050]

CodedQActor waitercleaner context ctxtearoom_dummy className "it.unibo.waitercleaner.Waitercleaner"

QActor timer context ctxtearoom_dummy {
	
	[# 
		var Time: Long = 0 
		var StartTime : Long = 0	
		var Duration : Long	= 0
	#]
	State s0 initial {
		println("timer   |||   init")
	}
	Goto wait
	
	State wait {
		println("timer   |||   wait")
	}
	Transition t0 whenMsg starttimer -> start
	
	State start{
		onMsg(starttimer : starttimer(T)) {
			[# Time = payloadArg(0).toLong() #]
			memoCurrentTime StartTime
		}
	}
	Transition t0 whenTimeVar Time -> timeFinish
				whenRequest stoptimer -> stop
				
	State stop{
		setDuration Duration from StartTime
		replyTo stoptimer with okStop : okTop($Duration)
	}
	Goto wait
	
	State timeFinish{
		forward waitercleaner -m endtime : endtime(endtime)
	}
	Goto wait
}